# Pentagonal numbers are generated by the formula, 
# Pn=n(3n−1)/2. The first ten pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. 
# However, their difference, 70 − 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, 
# Pj and Pk, for which their sum and difference are pentagonal 
# and D = |Pk − Pj| is minimised; what is the value of D?

############
# Solution #
############

upper_limit = 100000000
is_pentagonal = [False] * (upper_limit * 2)
pentagonals = []
pn = 1
n = 1
while pn < upper_limit:
	is_pentagonal[pn] = True
	pentagonals.append(pn)
	pn = n * (3 * n - 1) // 2
	n += 1

def findAnswer():
	lim = len(pentagonals)
	for i in range(lim):
		pi = pentagonals[i]
		for j in range(i, lim):
			pj = pentagonals[j]

			if is_pentagonal[pi + pj] and is_pentagonal[pj - pi]:
					return pj - pi

print(findAnswer())